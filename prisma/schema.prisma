// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["selectRelationCount", "filterJson"]
}

enum ReleaseType {
  ALPHA
  CANARY
  BETA
  STABLE
  ARCHIVE
}

enum DeviceType {
  WINDOWS
  MAC
  LINUX
  ANDROID
  IOS
  EMBEDDED
  UNKNOWN
}

enum Status {
  ONLINE
  OFFLINE
  PROVISIONING
}

enum Orientation {
  PORTRAIT
  LANDSCAPE
  AUTO
}

enum CallType {
  ONE_WAY_AUDIO
  TWO_WAY_AUDIO
  ONE_WAY_VIDEO
  TWO_WAY_VIDEO
  SCREEN_SHARE
}

enum CallProvider {
  TWILIO
  AGORA
}

enum UserIdleState {
  ACTIVE
  IDLE
}

enum ScreenIdleState {
  LOCKED
  UNLOCKED
}

enum CallPriority {
  SECURITY_PHONE
  COMMAND_CENTER
}

model User {
  id                  String           @id @default(uuid())
  email               String           @unique
  first_name          String
  middle_name         String?
  last_name           String?
  password            String
  about               String           @default("")
  email_verified      Boolean          @default(false)
  blocked             Boolean          @default(false)
  last_ip             String?
  last_login          DateTime         @default(now())
  last_password_reset DateTime?
  magic_sent_time     DateTime?
  user_idle_state     UserIdleState    @default(IDLE)
  screen_idle_state   ScreenIdleState  @default(LOCKED)
  roles               Role[]
  mobile              String?
  mobile_verified     Boolean          @default(false)
  country_code        Int              @default(0)
  avatar              String           @default("https://www.gravatar.com/avatar/00000000000000000000000000000000")
  fcm_tokens          String[]
  locations           Location[]
  credential_id       String           @default(uuid())
  fido_challenge      String?
  authenticators      Authenticators[]
  created_at          DateTime         @default(now())
  updated_at          DateTime         @updatedAt
}

model Authenticators {
  id                  String  @id @default(uuid())
  name                String
  fmt                 String  @default("unknown")
  transport           String?
  credentialID        String
  credentialPublicKey String
  counter             BigInt  @default(0)
  user                User    @relation(fields: [user_id], references: [id])
  user_id             String
  registered          Boolean @default(false)
  raw                 Json?
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  description String?
  permissions Permission[]
  users       User[]
}

model Permission {
  id          String @id @default(uuid())
  name        String @unique
  description String
  route       String
  roles       Role[]
}

model Device {
  id                 String       @id @default(uuid())
  name               String
  alias_name         String?
  blocked            Boolean      @default(true)
  token              String       @default(uuid())
  can_call           Boolean      @default(false)
  can_screen_share   Boolean      @default(false)
  supported_modes    CallType[]
  call_priority      CallPriority @default(SECURITY_PHONE)
  call_provider      CallProvider @default(TWILIO)
  device_type        DeviceType   @default(ANDROID)
  sub_type           String?
  fcm_token          String?
  description        String?
  status             Status       @default(PROVISIONING)
  software           Software?    @relation(fields: [software_id], references: [id])
  software_id        String?
  can_give_telemetry Boolean      @default(false)
  telemetry          Telemetry[]
  metadata           Json?
  sip_supported      Boolean      @default(false)
  sip                Sip?
  location           Location?    @relation(fields: [location_id], references: [id])
  location_id        String?
  policy             Policy?      @relation(fields: [policy_id], references: [id])
  policy_id          String?
  created_at         DateTime     @default(now())
  updated_at         DateTime     @updatedAt
}

model Location {
  id          String   @id @default(uuid())
  name        String
  description String?
  devices     Device[]
  users       User[]
  latitude    Float    @default(11.0365005)
  longitude   Float    @default(77.0162107)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model Sip {
  id           String  @id @default(uuid())
  name         String
  domain       String
  username     String
  password     String
  short_code   Int
  redirect     Boolean @default(false)
  redirect_sip String?
  device       Device? @relation(fields: [device_id], references: [id])
  device_id    String?

  @@unique([id, device_id])
}

model Software {
  id             String      @id @default(uuid())
  name           String
  package        String
  version_code   Int         @default(0)
  version_name   String?
  min_sdk        Float       @default(0)
  os             DeviceType  @default(UNKNOWN)
  path           String
  type           String?
  change_request String?
  changelog      String
  category       String?
  release_type   ReleaseType @default(ALPHA)
  devices        Device[]
  archived       Boolean     @default(false)
  archived_on    DateTime?
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt

  @@unique([package, version_code])
}

model Telemetry {
  id          String   @id @default(uuid())
  device      Device   @relation(fields: [device_id], references: [id])
  device_id   String
  screen_on   Boolean  @default(false)
  current_app String?
  latitude    Float    @default(11.0365005)
  longitude   Float    @default(77.0162107)
  call_logs   Json?
  sms_logs    Json?
  cpu         Json?
  memory      Json?
  apps        Json?
  camera      Json?
  battery     Json?
  wifi        Json?
  storage     Json?
  bluetooth   Json?
  metadata    Json?
  created_at  DateTime @default(now())
}

model Policy {
  id                 String      @id @default(uuid())
  screen_orientation Orientation @default(AUTO)
  screen_timeout     Int         @default(0)
  screen_brightness  Int         @default(50)
  volume             Int         @default(100)
  adb                Boolean     @default(false)
  adb_timeout        Int         @default(5000)
  alert_mails        String[]
  kiosk_mode         Boolean     @default(false)
  kiosk_app          String
  geofence           Json?
  device             Device[]
  created_at         DateTime    @default(now())
  updated_at         DateTime    @updatedAt
}
